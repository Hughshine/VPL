# OASIS_START
# DO NOT EDIT (digest: a5df4ad54f41a91a8b778908da0bc40c)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library vpl
"src/vpl.cmxs": use_vpl
"src/datatypes/Scalar.cmx": for-pack(Vpl)
"src/datatypes/Var.cmx": for-pack(Vpl)
"src/datatypes/Rtree.cmx": for-pack(Vpl)
"src/datatypes/VarMap.cmx": for-pack(Vpl)
"src/datatypes/Vector.cmx": for-pack(Vpl)
"src/datatypes/Cstr.cmx": for-pack(Vpl)
"src/misc/Misc.cmx": for-pack(Vpl)
"src/misc/DebugTypes.cmx": for-pack(Vpl)
"src/misc/Debug.cmx": for-pack(Vpl)
"src/misc/Heuristic.cmx": for-pack(Vpl)
"src/core/Cert.cmx": for-pack(Vpl)
"src/core/Cons.cmx": for-pack(Vpl)
"src/core/Splx.cmx": for-pack(Vpl)
"src/core/Opt.cmx": for-pack(Vpl)
"src/core/EqSet.cmx": for-pack(Vpl)
"src/core/IneqSet.cmx": for-pack(Vpl)
"src/lin/poly/PolyLexer.cmx": for-pack(Vpl)
"src/lin/poly/PolyParser.cmx": for-pack(Vpl)
"src/lin/poly/PolyParserBuild.cmx": for-pack(Vpl)
"src/lin/poly/Poly.cmx": for-pack(Vpl)
"src/lin/poly/CstrPoly.cmx": for-pack(Vpl)
"src/plp/Naming.cmx": for-pack(Vpl)
"src/plp/Objective.cmx": for-pack(Vpl)
"src/plp/ParamCoeff.cmx": for-pack(Vpl)
"src/plp/Tableau.cmx": for-pack(Vpl)
"src/plp/PSplx.cmx": for-pack(Vpl)
"src/plp/PLPBuild.cmx": for-pack(Vpl)
"src/plp/PLPCore.cmx": for-pack(Vpl)
"src/plp/PLPDistrib.cmx": for-pack(Vpl)
"src/plp/PLPPlot.cmx": for-pack(Vpl)
"src/plp/PLPLexer.cmx": for-pack(Vpl)
"src/plp/PLPParser.cmx": for-pack(Vpl)
"src/plp/PLP.cmx": for-pack(Vpl)
"src/core/Proj.cmx": for-pack(Vpl)
"src/core/Join.cmx": for-pack(Vpl)
"src/core/MinLP.cmx": for-pack(Vpl)
"src/core/Min.cmx": for-pack(Vpl)
"src/core/Pol.cmx": for-pack(Vpl)
"src/Flags.cmx": for-pack(Vpl)
"src/Config.cmx": for-pack(Vpl)
"src/lin/handelman/oracle/HOtypes.cmx": for-pack(Vpl)
"src/lin/handelman/Index.cmx": for-pack(Vpl)
"src/lin/handelman/IndexBuild.cmx": for-pack(Vpl)
"src/lin/handelman/Hi.cmx": for-pack(Vpl)
"src/lin/handelman/HPol.cmx": for-pack(Vpl)
"src/lin/handelman/oracle/HOracle.cmx": for-pack(Vpl)
"src/lin/handelman/oracle/HHeuristic.cmx": for-pack(Vpl)
"src/lin/handelman/oracle/HLP.cmx": for-pack(Vpl)
"src/lin/handelman/oracle/HPattern.cmx": for-pack(Vpl)
"src/lin/intervalization/IOracle.cmx": for-pack(Vpl)
"src/lin/intervalization/IHeuristic.cmx": for-pack(Vpl)
"src/lin/intervalization/IOtypes.cmx": for-pack(Vpl)
"src/lin/intervalization/IPattern.cmx": for-pack(Vpl)
"src/interface/CWrappers.cmx": for-pack(Vpl)
"src/interface/NCInterface.cmx": for-pack(Vpl)
"src/interface/NCDomain.cmx": for-pack(Vpl)
"src/interface/CDomain.cmx": for-pack(Vpl)
"src/interface/UserInterface.cmx": for-pack(Vpl)
"src/interface/Symbols.cmx": for-pack(Vpl)
"src/coq_ml/CoqPr.cmx": for-pack(Vpl)
"src/Calculator.cmx": for-pack(Vpl)
"src/core/ASTCert.cmx": for-pack(Vpl)
"src/interface/ASTDomain.cmx": for-pack(Vpl)
"src/plp/PoltoPLP.cmx": for-pack(Vpl)
"src/lin/handelman/Handelman.cmx": for-pack(Vpl)
"src/lin/handelman/HOracle_backend.cmx": for-pack(Vpl)
"src/lin/Lin.cmx": for-pack(Vpl)
"src/interface/Factory.cmx": for-pack(Vpl)
"src/smt/smtlib_build.cmx": for-pack(Vpl)
"src/smt/smtlib_lex.cmx": for-pack(Vpl)
"src/smt/smtlib_parse.cmx": for-pack(Vpl)
"src/smt/smtlib_syntax.cmx": for-pack(Vpl)
"src/smt/smtlib_util.cmx": for-pack(Vpl)
"src/extracted/LinearizeBackend.cmx": for-pack(Vpl)
"src/extracted/PedraQ.cmx": for-pack(Vpl)
"src/extracted/ASAtomicCond.cmx": for-pack(Vpl)
"src/extracted/ConsSet.cmx": for-pack(Vpl)
"src/extracted/DomainFunctors.cmx": for-pack(Vpl)
"src/extracted/PedraQBackend.cmx": for-pack(Vpl)
"src/coq_ml/PedraQOracles.cmx": for-pack(Vpl)
"src/extracted/PedraZ.cmx": for-pack(Vpl)
"src/extracted/ASCond.cmx": for-pack(Vpl)
"src/extracted/ASTerm.cmx": for-pack(Vpl)
"src/extracted/Itv.cmx": for-pack(Vpl)
"src/extracted/NumC.cmx": for-pack(Vpl)
"src/extracted/CstrC.cmx": for-pack(Vpl)
"src/extracted/LinTerm.cmx": for-pack(Vpl)
"src/extracted/CstrLCF.cmx": for-pack(Vpl)
"src/extracted/ZNoneItv.cmx": for-pack(Vpl)
"src/extracted/ProgVar.cmx": for-pack(Vpl)
"src/extracted/Ascii.cmx": for-pack(Vpl)
"src/extracted/BinInt.cmx": for-pack(Vpl)
"src/extracted/BinNat.cmx": for-pack(Vpl)
"src/extracted/BinNums.cmx": for-pack(Vpl)
"src/extracted/BinPos.cmx": for-pack(Vpl)
"src/extracted/BinPosDef.cmx": for-pack(Vpl)
"src/extracted/CoqAddOn.cmx": for-pack(Vpl)
"src/extracted/Datatypes.cmx": for-pack(Vpl)
"src/extracted/Debugging.cmx": for-pack(Vpl)
"src/extracted/DomainGCL.cmx": for-pack(Vpl)
"src/extracted/DomainInterfaces.cmx": for-pack(Vpl)
"src/extracted/Equalities.cmx": for-pack(Vpl)
"src/extracted/FMapPositive.cmx": for-pack(Vpl)
"src/extracted/Impure.cmx": for-pack(Vpl)
"src/extracted/ImpureConfig.cmx": for-pack(Vpl)
"src/extracted/List0.cmx": for-pack(Vpl)
"src/extracted/MSetPositive.cmx": for-pack(Vpl)
"src/extracted/Nat0.cmx": for-pack(Vpl)
"src/extracted/PositiveMapAddOn.cmx": for-pack(Vpl)
"src/extracted/PredTrans.cmx": for-pack(Vpl)
"src/extracted/QArith_base.cmx": for-pack(Vpl)
"src/extracted/Qcanon.cmx": for-pack(Vpl)
"src/extracted/Qreduction.cmx": for-pack(Vpl)
"src/extracted/Qround.cmx": for-pack(Vpl)
"src/extracted/Ring_polynom.cmx": for-pack(Vpl)
"src/extracted/Ring_polynom_AddOn.cmx": for-pack(Vpl)
"src/extracted/Ring_polynom_AddOnQ.cmx": for-pack(Vpl)
"src/extracted/FMapAVL.cmx": for-pack(Vpl)
"src/extracted/FMapList.cmx": for-pack(Vpl)
"src/extracted/Int.cmx": for-pack(Vpl)
"src/extracted/Specif.cmx": for-pack(Vpl)
"src/extracted/String0.cmx": for-pack(Vpl)
"src/extracted/ZArith_dec.cmx": for-pack(Vpl)
"src/extracted/Zbool.cmx": for-pack(Vpl)
"src/extracted/ZNone.cmx": for-pack(Vpl)
"src/coq_ml/CertcheckerConfig.cmx": for-pack(Vpl)
"src/extracted/PeanoNat.cmx": for-pack(Vpl)
"src/extracted/CIndex.cmx": for-pack(Vpl)
"src/extracted/Map_poly.cmx": for-pack(Vpl)
"src/extracted/OrderedType.cmx": for-pack(Vpl)
"src/extracted/OrdersTac.cmx": for-pack(Vpl)
"src/extracted/Compare_dec.cmx": for-pack(Vpl)
"src/extracted/DemoPLVerifier.cmx": for-pack(Vpl)
"src/Wrapper.cmx": for-pack(Vpl)
"src/misc/Profile.cmx": for-pack(Vpl)
<src/*.ml{,i,y}>: oasis_library_vpl_ccopt
<src/coq_ml/*.ml{,i,y}>: oasis_library_vpl_ccopt
<src/core/*.ml{,i,y}>: oasis_library_vpl_ccopt
<src/datatypes/*.ml{,i,y}>: oasis_library_vpl_ccopt
<src/extracted/*.ml{,i,y}>: oasis_library_vpl_ccopt
<src/interface/*.ml{,i,y}>: oasis_library_vpl_ccopt
<src/lin/*.ml{,i,y}>: oasis_library_vpl_ccopt
<src/lin/handelman/*.ml{,i,y}>: oasis_library_vpl_ccopt
<src/lin/handelman/oracle/*.ml{,i,y}>: oasis_library_vpl_ccopt
<src/lin/intervalization/*.ml{,i,y}>: oasis_library_vpl_ccopt
<src/lin/poly/*.ml{,i,y}>: oasis_library_vpl_ccopt
<src/misc/*.ml{,i,y}>: oasis_library_vpl_ccopt
<src/plp/*.ml{,i,y}>: oasis_library_vpl_ccopt
<src/smt/*.ml{,i,y}>: oasis_library_vpl_ccopt
"src/raytracing/vpl_stubs.c": oasis_library_vpl_ccopt
"src/raytracing/double.c": oasis_library_vpl_ccopt
"src/raytracing/glpkInterface.c": oasis_library_vpl_ccopt
"src/raytracing/ioInterface.c": oasis_library_vpl_ccopt
"src/raytracing/point.c": oasis_library_vpl_ccopt
"src/raytracing/polyhedron.c": oasis_library_vpl_ccopt
"src/raytracing/ray.c": oasis_library_vpl_ccopt
"src/raytracing/raytracing.c": oasis_library_vpl_ccopt
<src/vpl.{cma,cmxa}>: oasis_library_vpl_cclib
"src/libvpl_stubs.lib": oasis_library_vpl_cclib
"src/dllvpl_stubs.dll": oasis_library_vpl_cclib
"src/libvpl_stubs.a": oasis_library_vpl_cclib
"src/dllvpl_stubs.so": oasis_library_vpl_cclib
<src/vpl.{cma,cmxa}>: use_libvpl_stubs
<src/*.ml{,i,y}>: pkg_oclock
<src/*.ml{,i,y}>: pkg_unix
<src/*.ml{,i,y}>: pkg_zarith
<src/coq_ml/*.ml{,i,y}>: pkg_oclock
<src/coq_ml/*.ml{,i,y}>: pkg_unix
<src/coq_ml/*.ml{,i,y}>: pkg_zarith
<src/core/*.ml{,i,y}>: pkg_oclock
<src/core/*.ml{,i,y}>: pkg_unix
<src/core/*.ml{,i,y}>: pkg_zarith
<src/datatypes/*.ml{,i,y}>: pkg_oclock
<src/datatypes/*.ml{,i,y}>: pkg_unix
<src/datatypes/*.ml{,i,y}>: pkg_zarith
<src/extracted/*.ml{,i,y}>: pkg_oclock
<src/extracted/*.ml{,i,y}>: pkg_unix
<src/extracted/*.ml{,i,y}>: pkg_zarith
<src/interface/*.ml{,i,y}>: pkg_oclock
<src/interface/*.ml{,i,y}>: pkg_unix
<src/interface/*.ml{,i,y}>: pkg_zarith
<src/lin/*.ml{,i,y}>: pkg_oclock
<src/lin/*.ml{,i,y}>: pkg_unix
<src/lin/*.ml{,i,y}>: pkg_zarith
<src/lin/handelman/*.ml{,i,y}>: pkg_oclock
<src/lin/handelman/*.ml{,i,y}>: pkg_unix
<src/lin/handelman/*.ml{,i,y}>: pkg_zarith
<src/lin/handelman/oracle/*.ml{,i,y}>: pkg_oclock
<src/lin/handelman/oracle/*.ml{,i,y}>: pkg_unix
<src/lin/handelman/oracle/*.ml{,i,y}>: pkg_zarith
<src/lin/intervalization/*.ml{,i,y}>: pkg_oclock
<src/lin/intervalization/*.ml{,i,y}>: pkg_unix
<src/lin/intervalization/*.ml{,i,y}>: pkg_zarith
<src/lin/poly/*.ml{,i,y}>: pkg_oclock
<src/lin/poly/*.ml{,i,y}>: pkg_unix
<src/lin/poly/*.ml{,i,y}>: pkg_zarith
<src/misc/*.ml{,i,y}>: pkg_oclock
<src/misc/*.ml{,i,y}>: pkg_unix
<src/misc/*.ml{,i,y}>: pkg_zarith
<src/plp/*.ml{,i,y}>: pkg_oclock
<src/plp/*.ml{,i,y}>: pkg_unix
<src/plp/*.ml{,i,y}>: pkg_zarith
<src/smt/*.ml{,i,y}>: pkg_oclock
<src/smt/*.ml{,i,y}>: pkg_unix
<src/smt/*.ml{,i,y}>: pkg_zarith
"src/raytracing/vpl_stubs.c": pkg_oclock
"src/raytracing/vpl_stubs.c": pkg_unix
"src/raytracing/vpl_stubs.c": pkg_zarith
"src/raytracing/double.c": pkg_oclock
"src/raytracing/double.c": pkg_unix
"src/raytracing/double.c": pkg_zarith
"src/raytracing/glpkInterface.c": pkg_oclock
"src/raytracing/glpkInterface.c": pkg_unix
"src/raytracing/glpkInterface.c": pkg_zarith
"src/raytracing/ioInterface.c": pkg_oclock
"src/raytracing/ioInterface.c": pkg_unix
"src/raytracing/ioInterface.c": pkg_zarith
"src/raytracing/point.c": pkg_oclock
"src/raytracing/point.c": pkg_unix
"src/raytracing/point.c": pkg_zarith
"src/raytracing/polyhedron.c": pkg_oclock
"src/raytracing/polyhedron.c": pkg_unix
"src/raytracing/polyhedron.c": pkg_zarith
"src/raytracing/ray.c": pkg_oclock
"src/raytracing/ray.c": pkg_unix
"src/raytracing/ray.c": pkg_zarith
"src/raytracing/raytracing.c": pkg_oclock
"src/raytracing/raytracing.c": pkg_unix
"src/raytracing/raytracing.c": pkg_zarith
# OASIS_STOP
